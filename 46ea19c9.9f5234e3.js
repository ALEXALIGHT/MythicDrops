(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{133:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return m}));var o=t(1),r=t(9),a=(t(0),t(152)),i={id:"config_yml",title:"config.yml"},s={id:"config_yml",title:"config.yml",description:"## Configuration",source:"@site/../docs/config_yml.md",permalink:"/MythicDrops/docs/config_yml",sidebar:"docs",previous:{title:"WorldGuard Support",permalink:"/MythicDrops/docs/worldguard-support"},next:{title:"creatureSpawning.yml",permalink:"/MythicDrops/docs/creatureSpawning_yml"}},l=[{value:"Configuration",id:"configuration",children:[]}],c={rightToc:l};function m(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,"MythicDrops has a lot of configuration options. Below is the contents of the\nconfig.yml with inline explanations of what each configuration option does."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'version: 7.1.0\noptions:\n  ## Should monsters who receive drops be given\n  ## random names? Pulls from the resources/mobnames\n  ## folder. general.txt applies to all\n  ## monsters, while a creeper.txt will only apply to\n  ## creepers.\n  give-mobs-names: false\n  ## Should mobs that are given names get names that are\n  ## colored to match the color of the tiered item that they\n  ## received?\n  give-mobs-colored-names: false\n  ## Should all monsters be given random names? This includes\n  ## animals like cows and sheep. Pulls from the\n  ## resources/mobnames folder. general.txt applies to all\n  ## monsters, while a creeper.txt will only apply to\n  ## creepers.\n  give-all-mobs-names: false\n  ## Should mobs be given the equipment when they spawn or\n  ## should the items only be dropped on death? This defaults\n  ## to true so that players can identify mobs that will drop\n  ## sweet loot.\n  display-mob-equipment: true\n  ## Should mobs be able to pick up equipment that gets dropped\n  ## by a player? This defaults to false as if a player drops\n  ## a piece of loot with a low drop rate and a mob picks it\n  ## up, the mob might not drop the item when it dies. The laws\n  ## of item dropping chance still apply.\n  can-mobs-pick-up-equipment: false\n  blank-mob-spawn:\n    ## Should mobs have any pre-existing equipment removed when\n    ## they spawn? This defaults to false as Minecraft now\n    ## occasionally will spawn monsters with helmets, chestplates,\n    ## leggings, boots, or weapons.\n    enabled: false\n    ## When removing pre-existing equipment, should bows be\n    ## removed from skeletons?\n    skeletons-spawn-without-bow: false\n  ## Allow items to be repaired using an Anvil?\n  ## This defaults to false as items can be renamed using the Anvil.\n  allow-items-to-be-repaired-by-anvil: false\n  ## Should leather colors be randomized?\n  randomize-leather-colors: true\n  ## Default socket gem name color on items. For power users, mostly.\n  default-socket-name-color-on-items: GOLD\n  ## If a socket gem gets added to an item AND the item has a tier AND\n  ## this is set to true, then use the tier display color as the color\n  ## of the socket gem name on the item. Otherwise, use the color from\n  ## default-socket-name-color-on-items. For power users, mostly.\n  use-tier-color-for-socket-name: true\n  ## If mobs need to be killed by a player in order for their items to\n  ## drop. This is true by default as it helps nullify mob traps. If\n  ## you want mob traps to work, set this to false.\n  require-player-kill-for-drops: true\nmultiworld:\n  ## Include any worlds where you want to have MythicDrops\n  ## create drops here.\n  ## Example:\n  ##\n  ## enabled-worlds:\n  ## - world\n  ## - world2\n  ## - world3\n  enabled-worlds:\n    - world\n## All entries in this section have a maximum value of\n## 1.0 (100%) and a minimum value of 0.0 (0%).\ndrops:\n  ## This is the chance for a mob to get items at all.\n  item-chance: 1.0\n  ## This is the chance for a mob to spawn with a tiered item.\n  tiered-item-chance: 0.25\n  ## If a mob does not receive an item with a tier,\n  ## this is the chance for a mob to spawn with a\n  ## custom item.\n  custom-item-chance: 0.1\n  ## If a mob does not receive an item with a tier\n  ## or a custom item, this is the chance for a mob\n  ## to spawn with a socket gem.\n  socket-gem-chance: 0.2\n  ## If a mob does not receive an item with a tier\n  ## a custom item, or a socket gem, this is the chance for a mob\n  ## to spawn with an unidentified item.\n  unidentified-item-chance: 0.1\n  ## If a mob does not receive an item with a tier\n  ## a custom item, a socket gem, or an unidentified item,\n  ## this is the chance for a mob to spawn with an identity tome.\n  identity-tome-chance: 0.1\ncomponents:\n  ## Should creatures be able to spawn with items?\n  creature-spawning-enabled: true\n  ## Should MythicDrops enable its repairing feature\n  ## and disable the vanilla Minecraft repairing\n  ## feature (recommended)?\n  repairing-enabled: true\n  ## Should MythicDrops spawn items with empty sockets\n  ## and socket gems?\n  socketing-enabled: true\n  ## Should MythicDrops enable its identifying feature\n  ## and spawn unidentified items and identity tomes?\n  identifying-enabled: true\n  ## Should MythicDrops enable distance-from-spawn\n  ## based drops, i.e., drops that can only spawn within\n  ## certain distances from the spawn of a world?\n  distance-zones-enabled: false\ndisplay:\n  ## How should the name of generated items be formatted?\n  ## Uses variables contained in variables.txt.\n  item-display-name-format: "%generalprefix% %generalsuffix%"\n  ## How should the lore of generated items be formatted?\n  ## Uses variables contained in variables.txt.\n  tooltip-format:\n    - "&7Type: %mythicmaterial%"\n    - "&7Tier:%tiercolor% %tiername%"\n    - "%baselore%"\n    - "%bonuslore%"\n    - "%socketlore%"\n    - "%relationlore%"\n')))}m.isMDXComponent=!0},152:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),m=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},p=function(e){var n=m(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(t),u=o,h=p["".concat(i,".").concat(u)]||p[u]||d[u]||a;return t?r.a.createElement(h,s({ref:n},c,{components:t})):r.a.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);